{
  "metadata": {
    "version": "3.0.0",
    "build": "20250801-182338",
    "author": "0x4ymn",
    "team": "m4sec.team",
    "utc": "2025-08-01 18:23:38",
    "total_categories": 12,
    "total_tools": 50
  },
  "categories": {
    "1": {
      "name": "Web Application Testing",
      "description": "Tools for web application security testing and vulnerability assessment",
      "tools": {
        "gobuster": {
          "name": "gobuster",
          "description": "Fast directory/file brute-forcer written in Go",
          "command": "gobuster",
          "parameters": {
            "mode": {
              "type": "choice",
              "choices": ["dir", "dns", "vhost"],
              "default": "dir",
              "description": "Gobuster mode (dir/dns/vhost)"
            },
            "target": {
              "type": "input",
              "required": true,
              "description": "Target URL/IP/Domain"
            },
            "wordlist": {
              "type": "input",
              "default": "/usr/share/wordlists/dirb/common.txt",
              "description": "Wordlist path"
            },
            "extensions": {
              "type": "input",
              "default": "php,html,txt",
              "description": "File extensions (comma-separated)"
            },
            "threads": {
              "type": "input",
              "default": "10",
              "description": "Number of threads"
            }
          },
          "command_template": "gobuster {mode} -u {target} -w {wordlist} -x {extensions} -t {threads}",
          "examples": [
            "gobuster dir -u http://target.com -w /usr/share/wordlists/dirb/common.txt",
            "gobuster dns -d target.com -w /usr/share/wordlists/subdomains.txt"
          ]
        },
        "sqlmap": {
          "name": "sqlmap",
          "description": "Automatic SQL injection and database takeover tool",
          "command": "sqlmap",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target URL"
            },
            "data": {
              "type": "input",
              "description": "POST data (optional)"
            },
            "cookie": {
              "type": "input",
              "description": "HTTP Cookie header value"
            },
            "technique": {
              "type": "choice",
              "choices": ["B", "E", "U", "S", "T"],
              "description": "SQL injection techniques to use"
            },
            "batch": {
              "type": "boolean",
              "default": true,
              "description": "Never ask for user input, use default behavior"
            }
          },
          "command_template": "sqlmap -u {target} {data_flag} {cookie_flag} {technique_flag} {batch_flag}",
          "examples": [
            "sqlmap -u 'http://target.com/vulnerable.php?id=1' --batch",
            "sqlmap -u 'http://target.com/login.php' --data='username=admin&password=admin'"
          ]
        },
        "nikto": {
          "name": "nikto",
          "description": "Web server scanner for vulnerabilities and misconfigurations",
          "command": "nikto",
          "parameters": {
            "host": {
              "type": "input",
              "required": true,
              "description": "Target host"
            },
            "port": {
              "type": "input",
              "default": "80",
              "description": "Target port"
            },
            "ssl": {
              "type": "boolean",
              "default": false,
              "description": "Use SSL/HTTPS"
            }
          },
          "command_template": "nikto -h {host} -p {port} {ssl_flag}",
          "examples": [
            "nikto -h target.com",
            "nikto -h target.com -p 443 -ssl"
          ]
        },
        "ffuf": {
          "name": "ffuf",
          "description": "Fast web fuzzer written in Go",
          "command": "ffuf",
          "parameters": {
            "url": {
              "type": "input",
              "required": true,
              "description": "Target URL with FUZZ keyword"
            },
            "wordlist": {
              "type": "input",
              "default": "/usr/share/wordlists/dirb/common.txt",
              "description": "Wordlist path"
            },
            "extensions": {
              "type": "input",
              "default": "php,html,txt",
              "description": "File extensions"
            },
            "threads": {
              "type": "input",
              "default": "40",
              "description": "Number of threads"
            }
          },
          "command_template": "ffuf -u {url} -w {wordlist} -e {extensions} -t {threads}",
          "examples": [
            "ffuf -u http://target.com/FUZZ -w /usr/share/wordlists/dirb/common.txt",
            "ffuf -u http://target.com/FUZZ.php -w wordlist.txt"
          ]
        },
        "dirb": {
          "name": "dirb",
          "description": "Web content scanner for hidden directories and files",
          "command": "dirb",
          "parameters": {
            "url": {
              "type": "input",
              "required": true,
              "description": "Target URL"
            },
            "wordlist": {
              "type": "input",
              "default": "/usr/share/wordlists/dirb/common.txt",
              "description": "Wordlist path"
            },
            "extensions": {
              "type": "input",
              "default": "php,html,txt",
              "description": "File extensions list"
            }
          },
          "command_template": "dirb {url} {wordlist} -X {extensions}",
          "examples": [
            "dirb http://target.com/",
            "dirb http://target.com/ /usr/share/wordlists/dirb/big.txt"
          ]
        },
        "whatweb": {
          "name": "whatweb",
          "description": "Web application fingerprinting tool",
          "command": "whatweb",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target URL or IP"
            },
            "aggression": {
              "type": "choice",
              "choices": ["1", "2", "3", "4"],
              "default": "1",
              "description": "Aggression level (1-4)"
            },
            "verbose": {
              "type": "boolean",
              "default": false,
              "description": "Verbose output"
            }
          },
          "command_template": "whatweb -a {aggression} {verbose_flag} {target}",
          "examples": [
            "whatweb target.com",
            "whatweb -a 3 -v target.com"
          ]
        }
      }
    },
    "2": {
      "name": "Network Reconnaissance & Scanning",  
      "description": "Network discovery, port scanning, and reconnaissance tools",
      "tools": {
        "nmap": {
          "name": "nmap",
          "description": "Network discovery and security auditing utility",
          "command": "nmap",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target IP/Network/Host"
            },
            "scan_type": {
              "type": "choice",
              "choices": ["-sS", "-sT", "-sU", "-sA", "-sV", "-sC"],
              "default": "-sS",
              "description": "Scan type"
            },
            "ports": {
              "type": "input",
              "default": "1-1000",
              "description": "Port range"
            },
            "timing": {
              "type": "choice",
              "choices": ["-T0", "-T1", "-T2", "-T3", "-T4", "-T5"],
              "default": "-T4",
              "description": "Timing template"
            }
          },
          "command_template": "nmap {scan_type} -p {ports} {timing} {target}",
          "examples": [
            "nmap -sS -p 1-1000 target.com",
            "nmap -sV -sC -p- target.com"
          ]
        },
        "masscan": {
          "name": "masscan",
          "description": "Mass IP port scanner, TCP port scanner",
          "command": "masscan",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target IP/Network"
            },
            "ports": {
              "type": "input",
              "default": "1-1000",
              "description": "Port range"
            },
            "rate": {
              "type": "input",
              "default": "1000",
              "description": "Packets per second rate"
            }
          },
          "command_template": "masscan {target} -p {ports} --rate {rate}",
          "examples": [
            "masscan 10.0.0.0/8 -p 80,443 --rate 1000",
            "masscan 192.168.1.0/24 -p 1-1000 --rate 500"
          ]
        },
        "rustscan": {
          "name": "rustscan",
          "description": "Modern port scanner built in Rust",
          "command": "rustscan",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target IP/hostname"
            },
            "ports": {
              "type": "input",
              "default": "1-1000",
              "description": "Port range"
            },
            "batch_size": {
              "type": "input",
              "default": "4500",
              "description": "Batch size for port scanning"
            }
          },
          "command_template": "rustscan -a {target} -r {ports} -b {batch_size}",
          "examples": [
            "rustscan -a 127.0.0.1",
            "rustscan -a target.com -r 1-1000"
          ]
        },
        "enum4linux": {
          "name": "enum4linux",
          "description": "Tool for enumerating information from Windows and Samba systems",
          "command": "enum4linux",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target IP address"
            },
            "username": {
              "type": "input",
              "description": "Username for authentication"
            },
            "password": {
              "type": "input",
              "description": "Password for authentication"
            },
            "all": {
              "type": "boolean",
              "default": true,
              "description": "Do all simple enumeration"
            }
          },
          "command_template": "enum4linux {all_flag} {username_flag} {password_flag} {target}",
          "examples": [
            "enum4linux -a 192.168.1.10",
            "enum4linux -u admin -p password 192.168.1.10"
          ]
        },
        "dnsrecon": {
          "name": "dnsrecon",
          "description": "DNS enumeration and reconnaissance tool",
          "command": "dnsrecon",
          "parameters": {
            "domain": {
              "type": "input",
              "required": true,
              "description": "Target domain"
            },
            "type": {
              "type": "choice",
              "choices": ["std", "rvl", "brt", "srv", "axfr"],
              "default": "std",
              "description": "Type of enumeration"
            },
            "threads": {
              "type": "input",
              "default": "10",
              "description": "Number of threads"
            }
          },
          "command_template": "dnsrecon -d {domain} -t {type} --threads {threads}",
          "examples": [
            "dnsrecon -d target.com",
            "dnsrecon -d target.com -t brt"
          ]
        }
      }
    },
    "3": {
      "name": "Binary Analysis & Reverse Engineering",
      "description": "Tools for binary analysis, reverse engineering, and malware analysis",
      "tools": {
        "radare2": {
          "name": "radare2",
          "description": "Reverse engineering framework and command-line toolset",
          "command": "r2",
          "parameters": {
            "file": {
              "type": "input",
              "required": true,
              "description": "Binary file to analyze"
            },
            "analyze": {
              "type": "boolean",
              "default": true,
              "description": "Perform automatic analysis (-A)"
            },
            "debug": {
              "type": "boolean",
              "default": false,
              "description": "Debug mode (-d)"
            }
          },
          "command_template": "r2 {analyze_flag} {debug_flag} {file}",
          "examples": [
            "r2 -A binary_file",
            "r2 -d -A ./program"
          ]
        },
        "gdb": {
          "name": "gdb",
          "description": "GNU Debugger for debugging programs",
          "command": "gdb",
          "parameters": {
            "program": {
              "type": "input",
              "required": true,
              "description": "Program to debug"
            },
            "core": {
              "type": "input",
              "description": "Core dump file (optional)"
            },
            "quiet": {
              "type": "boolean",
              "default": false,
              "description": "Quiet mode"
            }
          },
          "command_template": "gdb {quiet_flag} {program} {core}",
          "examples": [
            "gdb ./program",
            "gdb -q ./program core"
          ]
        },
        "ghidra": {
          "name": "ghidra",
          "description": "NSA's reverse engineering framework",
          "command": "ghidra",
          "parameters": {
            "project": {
              "type": "input",
              "description": "Project directory"
            },
            "headless": {
              "type": "boolean",
              "default": false,
              "description": "Run in headless mode"
            }
          },
          "command_template": "ghidra {headless_flag} {project}",
          "examples": [
            "ghidra",
            "ghidra /path/to/project"
          ]
        },
        "objdump": {
          "name": "objdump",
          "description": "Display information from object files",
          "command": "objdump",
          "parameters": {
            "file": {
              "type": "input",
              "required": true,
              "description": "Object file to analyze"
            },
            "disassemble": {
              "type": "boolean",
              "default": true,
              "description": "Display assembler contents (-d)"
            },
            "headers": {
              "type": "boolean",
              "default": false,
              "description": "Display section headers (-h)"
            }
          },
          "command_template": "objdump {disassemble_flag} {headers_flag} {file}",
          "examples": [
            "objdump -d binary_file",
            "objdump -h -d binary_file"
          ]
        },
        "strings": {
          "name": "strings",
          "description": "Extract printable strings from binary files",
          "command": "strings",
          "parameters": {
            "file": {
              "type": "input",
              "required": true,
              "description": "File to analyze"
            },
            "min_length": {
              "type": "input",
              "default": "4",
              "description": "Minimum string length"
            },
            "encoding": {
              "type": "choice",
              "choices": ["s", "S", "b", "l", "B", "L"],
              "description": "Character encoding"
            }
          },
          "command_template": "strings -n {min_length} {encoding_flag} {file}",
          "examples": [
            "strings binary_file",
            "strings -n 8 binary_file"
          ]
        }
      }
    },
    "4": {
      "name": "Forensics & Steganography",
      "description": "Digital forensics, steganography, and file analysis tools",
      "tools": {
        "binwalk": {
          "name": "binwalk",
          "description": "Firmware analysis tool for embedded systems",
          "command": "binwalk",
          "parameters": {
            "file": {
              "type": "input",
              "required": true,
              "description": "File to analyze"
            },
            "extract": {
              "type": "boolean",
              "default": false,
              "description": "Extract found files (-e)"
            },
            "signature": {
              "type": "boolean",
              "default": true,
              "description": "Scan for common signatures (-B)"
            }
          },
          "command_template": "binwalk {extract_flag} {signature_flag} {file}",
          "examples": [
            "binwalk firmware.bin",
            "binwalk -e firmware.bin"
          ]
        },
        "steghide": {
          "name": "steghide",
          "description": "Steganography tool for hiding data in image and audio files",
          "command": "steghide",
          "parameters": {
            "action": {
              "type": "choice",
              "choices": ["embed", "extract", "info"],
              "default": "extract",
              "description": "Action to perform"
            },
            "cover_file": {
              "type": "input",
              "required": true,
              "description": "Cover file (image/audio)"
            },
            "embed_file": {
              "type": "input",
              "description": "File to embed (for embed action)"
            },
            "passphrase": {
              "type": "input",
              "description": "Passphrase for encryption"
            }
          },
          "command_template": "steghide {action} -cf {cover_file} {embed_flag} {passphrase_flag}",
          "examples": [
            "steghide extract -cf image.jpg",
            "steghide embed -cf image.jpg -ef secret.txt"
          ]
        },
        "exiftool": {
          "name": "exiftool",
          "description": "Platform-independent metadata reader and writer",
          "command": "exiftool",
          "parameters": {
            "file": {
              "type": "input",
              "required": true,
              "description": "File to analyze"
            },
            "verbose": {
              "type": "boolean",
              "default": false,
              "description": "Verbose output"
            },
            "remove_all": {
              "type": "boolean",
              "default": false,
              "description": "Remove all metadata"
            }
          },
          "command_template": "exiftool {verbose_flag} {remove_all_flag} {file}",
          "examples": [
            "exiftool image.jpg",
            "exiftool -all= clean_image.jpg"
          ]
        },
        "foremost": {
          "name": "foremost",
          "description": "File carving tool for recovering files",
          "command": "foremost",
          "parameters": {
            "input_file": {
              "type": "input",
              "required": true,
              "description": "Input file or device"
            },
            "output_dir": {
              "type": "input",
              "default": "./output",
              "description": "Output directory"
            },
            "types": {
              "type": "input",
              "default": "all",
              "description": "File types to recover"
            }
          },
          "command_template": "foremost -i {input_file} -o {output_dir} -t {types}",
          "examples": [
            "foremost -i disk.img -o recovered/",
            "foremost -i /dev/sdb1 -t jpg,png,pdf"
          ]
        },
        "volatility3": {
          "name": "volatility3",
          "description": "Advanced memory forensics framework",
          "command": "vol",
          "parameters": {
            "dump_file": {
              "type": "input",
              "required": true,
              "description": "Memory dump file"
            },
            "plugin": {
              "type": "choice",
              "choices": ["pslist", "pstree", "netstat", "filescan", "cmdline"],
              "default": "pslist",
              "description": "Plugin to run"
            },
            "output_file": {
              "type": "input",
              "description": "Output file (optional)"
            }
          },
          "command_template": "vol -f {dump_file} {plugin} {output_flag}",
          "examples": [
            "vol -f memory.dmp pslist",
            "vol -f memory.dmp netstat"
          ]
        }
      }
    },
    "5": {
      "name": "Cryptography & Password Cracking",
      "description": "Cryptography analysis and password cracking tools",
      "tools": {
        "john": {
          "name": "john",
          "description": "John the Ripper password cracker",
          "command": "john",
          "parameters": {
            "hashfile": {
              "type": "input",
              "required": true,
              "description": "Hash file to crack"
            },
            "wordlist": {
              "type": "input",
              "default": "/usr/share/wordlists/rockyou.txt",
              "description": "Wordlist path"
            },
            "format": {
              "type": "input",
              "description": "Hash format (optional)"
            },
            "show": {
              "type": "boolean",
              "default": false,
              "description": "Show cracked passwords"
            }
          },
          "command_template": "john {format_flag} {wordlist_flag} {show_flag} {hashfile}",
          "examples": [
            "john --wordlist=/usr/share/wordlists/rockyou.txt hashes.txt",
            "john --format=md5 hashes.txt"
          ]
        },
        "hashcat": {
          "name": "hashcat",
          "description": "Advanced password recovery utility",
          "command": "hashcat",
          "parameters": {
            "attack_mode": {
              "type": "choice",
              "choices": ["0", "1", "3"],
              "default": "0",
              "description": "Attack mode (0=dict, 1=combinator, 3=mask)"
            },
            "hash_type": {
              "type": "input",
              "default": "0",
              "description": "Hash type (0=MD5, 1000=NTLM, etc.)"
            },
            "hashfile": {
              "type": "input",
              "required": true,
              "description": "Hash file"
            },
            "wordlist": {
              "type": "input",
              "default": "/usr/share/wordlists/rockyou.txt",
              "description": "Wordlist path"
            }
          },
          "command_template": "hashcat -m {hash_type} -a {attack_mode} {hashfile} {wordlist}",
          "examples": [
            "hashcat -m 0 -a 0 hashes.txt /usr/share/wordlists/rockyou.txt",
            "hashcat -m 1000 -a 0 ntlm_hashes.txt wordlist.txt"
          ]
        },
        "openssl": {
          "name": "openssl",
          "description": "OpenSSL cryptography toolkit",
          "command": "openssl",
          "parameters": {
            "command": {
              "type": "choice",
              "choices": ["enc", "dgst", "genrsa", "req", "x509"],
              "default": "dgst",
              "description": "OpenSSL command"
            },
            "algorithm": {
              "type": "choice",
              "choices": ["md5", "sha1", "sha256", "sha512"],
              "default": "sha256",
              "description": "Hash algorithm"
            },
            "input_file": {
              "type": "input",
              "description": "Input file"
            },
            "output_file": {
              "type": "input",
              "description": "Output file"
            }
          },
          "command_template": "openssl {command} -{algorithm} {input_file} {output_file}",
          "examples": [
            "openssl dgst -sha256 file.txt",
            "openssl enc -aes-256-cbc -in file.txt -out file.enc"
          ]
        },
        "hydra": {
          "name": "hydra",
          "description": "Network logon cracker supporting many protocols",
          "command": "hydra",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target IP or hostname"
            },
            "service": {
              "type": "choice",
              "choices": ["ssh", "ftp", "http-get", "http-post-form", "smtp", "pop3"],
              "default": "ssh",
              "description": "Service to attack"
            },
            "username": {
              "type": "input",
              "description": "Single username"
            },
            "userlist": {
              "type": "input",
              "description": "Username list file"
            },
            "password": {
              "type": "input",
              "description": "Single password"
            },
            "passlist": {
              "type": "input",
              "default": "/usr/share/wordlists/rockyou.txt",
              "description": "Password list file"
            }
          },
          "command_template": "hydra {username_flag} {userlist_flag} {password_flag} {passlist_flag} {target} {service}",
          "examples": [
            "hydra -l admin -P /usr/share/wordlists/rockyou.txt 192.168.1.1 ssh",
            "hydra -L users.txt -P passwords.txt target.com ftp"
          ]
        }
      }
    },
    "6": {
      "name": "Wireless Security",
      "description": "Wireless network security and penetration testing tools",
      "tools": {
        "aircrack-ng": {
          "name": "aircrack-ng",
          "description": "WiFi security auditing tools suite",
          "command": "aircrack-ng",
          "parameters": {
            "capture_file": {
              "type": "input",
              "required": true,
              "description": "Capture file (.cap/.pcap)"
            },
            "wordlist": {
              "type": "input",
              "default": "/usr/share/wordlists/rockyou.txt",
              "description": "Wordlist for cracking"
            },
            "bssid": {
              "type": "input",
              "description": "Target BSSID (optional)"
            }
          },
          "command_template": "aircrack-ng -w {wordlist} {bssid_flag} {capture_file}",
          "examples": [
            "aircrack-ng -w /usr/share/wordlists/rockyou.txt capture.cap",
            "aircrack-ng -b 00:11:22:33:44:55 capture.cap"
          ]
        },
        "reaver": {
          "name": "reaver",
          "description": "WPS PIN brute force attack tool",
          "command": "reaver",
          "parameters": {
            "interface": {
              "type": "input",
              "required": true,
              "description": "Monitor mode interface"
            },
            "bssid": {
              "type": "input",
              "required": true,
              "description": "Target BSSID"
            },
            "channel": {
              "type": "input",
              "description": "Target channel"
            },
            "delay": {
              "type": "input",
              "default": "1",
              "description": "Delay between PIN attempts"
            }
          },
          "command_template": "reaver -i {interface} -b {bssid} {channel_flag} -d {delay}",
          "examples": [
            "reaver -i wlan0mon -b 00:11:22:33:44:55 -d 1",
            "reaver -i wlan0mon -b 00:11:22:33:44:55 -c 6"
          ]
        }
      }
    },
    "7": {
      "name": "Social Engineering & OSINT",
      "description": "Social engineering and open source intelligence gathering tools",
      "tools": {
        "theharvester": {
          "name": "theharvester",
          "description": "OSINT tool for gathering emails, subdomains, and more",
          "command": "theharvester",
          "parameters": {
            "domain": {
              "type": "input",
              "required": true,
              "description": "Target domain"
            },
            "sources": {
              "type": "choice",
              "choices": ["google", "bing", "linkedin", "twitter", "all"],
              "default": "google",
              "description": "Information sources"
            },
            "limit": {
              "type": "input",
              "default": "500",
              "description": "Limit number of results"
            }
          },
          "command_template": "theharvester -d {domain} -b {sources} -l {limit}",
          "examples": [
            "theharvester -d target.com -b google -l 500",
            "theharvester -d target.com -b all"
          ]
        },
        "maltego": {
          "name": "maltego",
          "description": "OSINT and link analysis tool",
          "command": "maltego",
          "parameters": {
            "machine": {
              "type": "input",
              "description": "Machine to run"
            },
            "entity": {
              "type": "input",
              "description": "Starting entity"
            }
          },
          "command_template": "maltego {machine} {entity}",
          "examples": [
            "maltego",
            "maltego --machine=footprint --entity=domain"
          ]
        }
      }
    },
    "8": {
      "name": "Exploitation & Post-Exploitation",
      "description": "Exploitation frameworks and post-exploitation tools",
      "tools": {
        "metasploit": {
          "name": "metasploit",
          "description": "Penetration testing framework",
          "command": "msfconsole",
          "parameters": {
            "resource": {
              "type": "input",
              "description": "Resource script to load"
            },
            "quiet": {
              "type": "boolean",
              "default": false,
              "description": "Quiet mode"
            }
          },
          "command_template": "msfconsole {quiet_flag} {resource_flag}",
          "examples": [
            "msfconsole",
            "msfconsole -r script.rc"
          ]
        },
        "msfvenom": {
          "name": "msfvenom",
          "description": "Metasploit payload generator",
          "command": "msfvenom",
          "parameters": {
            "payload": {
              "type": "input",
              "required": true,
              "description": "Payload to generate"
            },
            "lhost": {
              "type": "input",
              "description": "Local host IP"
            },
            "lport": {
              "type": "input",
              "default": "4444",
              "description": "Local port"
            },
            "format": {
              "type": "choice",
              "choices": ["exe", "elf", "raw", "python", "powershell"],
              "default": "exe",
              "description": "Output format"
            },
            "output": {
              "type": "input",
              "description": "Output file"
            }
          },
          "command_template": "msfvenom -p {payload} LHOST={lhost} LPORT={lport} -f {format} {output_flag}",
          "examples": [
            "msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.0.0.1 LPORT=4444 -f exe -o payload.exe",
            "msfvenom -p linux/x86/shell_reverse_tcp LHOST=192.168.1.10 LPORT=4444 -f elf -o shell"
          ]
        }
      }
    },
    "9": {
      "name": "Mobile Security",
      "description": "Mobile application and device security testing tools",
      "tools": {
        "apktool": {
          "name": "apktool",
          "description": "Tool for reverse engineering Android APK files",
          "command": "apktool",
          "parameters": {
            "action": {
              "type": "choice",
              "choices": ["d", "b"],
              "default": "d",
              "description": "Action (d=decode, b=build)"
            },
            "apk_file": {
              "type": "input",
              "required": true,
              "description": "APK file to process"
            },
            "output_dir": {
              "type": "input",
              "description": "Output directory"
            }
          },
          "command_template": "apktool {action} {apk_file} {output_dir}",
          "examples": [
            "apktool d app.apk",
            "apktool b decoded_app/ -o rebuilt.apk"
          ]
        },
        "jadx": {
          "name": "jadx",
          "description": "Dex to Java decompiler",
          "command": "jadx",
          "parameters": {
            "apk_file": {
              "type": "input",
              "required": true,
              "description": "APK/DEX file to decompile"
            },
            "output_dir": {
              "type": "input",
              "default": "./jadx_output",
              "description": "Output directory"
            }
          },
          "command_template": "jadx -d {output_dir} {apk_file}",
          "examples": [
            "jadx app.apk",
            "jadx -d output/ app.apk"
          ]
        }
      }
    },
    "10": {
      "name": "Cloud Security",
      "description": "Cloud infrastructure and service security tools",
      "tools": {
        "awscli": {
          "name": "awscli",
          "description": "Amazon Web Services Command Line Interface",
          "command": "aws",
          "parameters": {
            "service": {
              "type": "choice",
              "choices": ["s3", "ec2", "iam", "lambda", "rds"],
              "default": "s3",
              "description": "AWS service"
            },
            "action": {
              "type": "input",
              "required": true,
              "description": "Action to perform"
            },
            "profile": {
              "type": "input",
              "description": "AWS profile to use"
            }
          },
          "command_template": "aws {service} {action} {profile_flag}",
          "examples": [
            "aws s3 ls",
            "aws ec2 describe-instances"
          ]
        },
        "scout": {
          "name": "scout",
          "description": "Multi-cloud security auditing tool",
          "command": "scout",
          "parameters": {
            "provider": {
              "type": "choice",
              "choices": ["aws", "azure", "gcp"],
              "default": "aws",
              "description": "Cloud provider"
            },
            "services": {
              "type": "input",
              "description": "Services to audit"
            }
          },
          "command_template": "scout {provider} {services}",
          "examples": [
            "scout aws",
            "scout azure --services compute,storage"
          ]
        }
      }
    },
    "11": {
      "name": "Database Security",
      "description": "Database security assessment and exploitation tools",
      "tools": {
        "sqlmap": {
          "name": "sqlmap",
          "description": "Automatic SQL injection and database takeover tool",
          "command": "sqlmap",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target URL"
            },
            "database": {
              "type": "choice",
              "choices": ["mysql", "postgresql", "oracle", "mssql"],
              "description": "Database type"
            },
            "technique": {
              "type": "choice",
              "choices": ["B", "E", "U", "S", "T"],
              "description": "SQL injection techniques"
            }
          },
          "command_template": "sqlmap -u {target} {database_flag} {technique_flag}",
          "examples": [
            "sqlmap -u 'http://target.com/page.php?id=1'",
            "sqlmap -u 'http://target.com/login.php' --data='user=admin&pass=admin'"
          ]
        },
        "nosqlimap": {
          "name": "nosqlimap",
          "description": "NoSQL injection testing tool",
          "command": "nosqlimap",
          "parameters": {
            "target": {
              "type": "input",
              "required": true,
              "description": "Target URL"
            },
            "method": {
              "type": "choice",
              "choices": ["GET", "POST"],
              "default": "GET",
              "description": "HTTP method"
            }
          },
          "command_template": "nosqlimap -u {target} -m {method}",
          "examples": [
            "nosqlimap -u http://target.com/api/users",
            "nosqlimap -u http://target.com/login -m POST"
          ]
        }
      }
    },
    "12": {
      "name": "Miscellaneous Security Tools",
      "description": "Additional security tools and utilities",
      "tools": {
        "burpsuite": {
          "name": "burpsuite",
          "description": "Web application security testing platform",
          "command": "burpsuite",
          "parameters": {
            "project": {
              "type": "input",
              "description": "Project file to load"
            },
            "headless": {
              "type": "boolean",
              "default": false,
              "description": "Run in headless mode"
            }
          },
          "command_template": "burpsuite {project_flag} {headless_flag}",
          "examples": [
            "burpsuite",
            "burpsuite --project-file=project.burp"
          ]
        },
        "wireshark": {
          "name": "wireshark",
          "description": "Network protocol analyzer",
          "command": "wireshark",
          "parameters": {
            "interface": {
              "type": "input",
              "description": "Network interface to capture"
            },
            "capture_file": {
              "type": "input",
              "description": "Capture file to open"
            }
          },
          "command_template": "wireshark {interface_flag} {capture_file}",
          "examples": [
            "wireshark",
            "wireshark -i eth0",
            "wireshark capture.pcap"
          ]
        },
        "netcat": {
          "name": "netcat",
          "description": "Networking utility for reading/writing network connections",
          "command": "nc",
          "parameters": {
            "host": {
              "type": "input",
              "description": "Target host"
            },
            "port": {
              "type": "input",
              "required": true,
              "description": "Target port"
            },
            "listen": {
              "type": "boolean",
              "default": false,
              "description": "Listen mode"
            },
            "verbose": {
              "type": "boolean",
              "default": false,
              "description": "Verbose output"
            }
          },
          "command_template": "nc {listen_flag} {verbose_flag} {host} {port}",
          "examples": [
            "nc -l -p 4444",
            "nc target.com 80",
            "nc -v target.com 22"
          ]
        },
        "socat": {
          "name": "socat",
          "description": "Multipurpose relay for bidirectional data transfer",
          "command": "socat",
          "parameters": {
            "address1": {
              "type": "input",
              "required": true,
              "description": "First address"
            },
            "address2": {
              "type": "input",
              "required": true,
              "description": "Second address"
            }
          },
          "command_template": "socat {address1} {address2}",
          "examples": [
            "socat TCP-LISTEN:8080,reuseaddr,fork TCP:target.com:80",
            "socat FILE:`tty`,raw,echo=0 TCP:target.com:4444"
          ]
        }
      }
    }
  }
}